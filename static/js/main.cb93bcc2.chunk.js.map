{"version":3,"sources":["components/Github.js","components/TodoTextInput.js","components/TodoStarIcon.js","storage/base.js","redux/actions/todoActions.js","redux/actions/types.js","constants/Filter.js","redux/selectors/counterSelector.js","redux/containers/TodoStarIcon.js","components/TodoItem.js","redux/containers/TodoItem.js","components/TodoList.js","redux/selectors/listSelector.js","redux/containers/TodoList.js","components/TodoForm.js","redux/containers/TodoForm.js","App.js","serviceWorker.js","utils/date.js","redux/reducers/todoReducer.js","redux/reducers/index.js","index.js","storage/storageKey.js","redux/store/configureStore.js","redux/store/configureEnhancer.js"],"names":["GitHub","react_default","a","createElement","href","target","rel","className","style","position","right","top","width","src","alt","TodoTextInput","state","text","_this","props","handleChange","e","setState","value","handleBlur","handleInputFieldUpdate","trim","handleSubmit","key","autoFocus","type","this","onChange","onBlur","onKeyDown","Component","TodoStarIcon","starred","todo","onClickHandler","newTodo","Object","objectSpread","updateTodo","toggleItemStarState","iconClass","completed","onClick","dangerouslySetInnerHTML","__html","firebaseDb","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","base","Rebase","createClass","update","oldTodo","dispatch","post","concat","data","then","_updateSucceed","catch","err","console","error","VISIBILITY_ALL","VISIBILITY_ACTIVE","VISIBILITY_COMPLETED","getTodos","todoApp","todos","countActiveStarred","createSelector","filter","length","connect","filterCounter","values","Filters","map","Error","counterActiveStarred","CounterSelector","TodoItem","editing","handleCheckboxChange","event","isCompleted","checked","handleDoubleClick","handleToggleItemStarState","deleteTodo","title","itemView","components_TodoTextInput","defaultChecked","onDoubleClick","containers_TodoStarIcon","classnames","starred_todo","nodeUrl","ref","remove","_remove","TodoList","loadTodos","containers_TodoItem","id","React","getFilteredTodos","visibility","starredFirst","b","t","sort","firstBy","thenBy","ListSelector","loading","fetch","context","asArray","_fetchTodosSucceed","TodoForm","inputText","handleKeyPress","Date","now","createTodo","placeholder","onKeyPress","push","newLocation","_addSucceed","App","Github","containers_TodoForm","containers_TodoList","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","dateToString","currentDate","toISOString","year","substr","month","day","initialState","logs","todosChanged","removeCompletedTodos","action","toConsumableArray","indexOf","updateLogs","trackedTodos","index","splice","combineReducers","arguments","undefined","todoStorage","uid","fetchTodos","serializedState","localStorage","getItem","JSON","parse","saveTodos","serializedTodos","stringify","setItem","fetchTodoLogs","saveTodoLogs","saveCurrentDate","dateString","fetchCurrentDate","store","enhancer","REDUX_EXTENSION","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","configureEnhancer","createStore","rootReducer","configureStore","ReactDOM","render","es","src_App","document","getElementById","URL","origin","addEventListener","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cb93bcc2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst GitHub = () => {\n  const avatarStyle = {\n    position: \"absolute\",\n    right: \"10px\",\n    top: \"10px\",\n    width: \"48px\"\n  };\n  return (\n    <a\n      href=\"https://github.com/vikbert/meiri\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <img\n        className=\"avatar\"\n        style={avatarStyle}\n        src=\"https://github.githubassets.com/images/modules/site/logos/desktop-logo.png\"\n        alt=\"avatar\"\n      />\n    </a>\n  );\n};\n\nexport default GitHub;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass TodoTextInput extends Component {\n  state = { text: this.props.text || \"\" };\n\n  handleChange = (e) => {\n    this.setState({ text: e.target.value });\n  };\n\n  handleBlur = () => {\n    this.props.handleInputFieldUpdate(this.state.text.trim());\n  };\n\n  handleSubmit = (e) => {\n    if (e.key === \"Enter\") {\n      this.props.handleInputFieldUpdate(this.state.text.trim());\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className=\"edit\"\n        autoFocus={true}\n        type=\"text\"\n        value={this.state.text}\n        onChange={this.handleChange}\n        onBlur={this.handleBlur}\n        onKeyDown={this.handleSubmit}\n      />\n    );\n  }\n}\n\nTodoTextInput.propTypes = {\n  handleInputFieldUpdate: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  editing: PropTypes.bool.isRequired\n};\n\nexport default TodoTextInput;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass TodoStarIcon extends Component {\n  state = {\n    starred: this.props.todo.starred\n  };\n\n  onClickHandler = () => {\n    const newTodo = { ...this.props.todo };\n\n    newTodo.starred = +!this.props.todo.starred;\n    this.props.updateTodo(newTodo, this.props.todo);\n    this.props.toggleItemStarState(newTodo.starred);\n\n    this.setState({\n      starred: newTodo.starred\n    });\n  };\n\n  render() {\n    const iconClass = this.state.starred\n      ? this.props.todo.completed\n        ? \"starred starred_completed\"\n        : \"starred\"\n      : \"star\";\n\n    return (\n      <span\n        className={iconClass}\n        onClick={this.onClickHandler}\n        dangerouslySetInnerHTML={{\n          __html: this.state.starred\n            ? '<svg width=\"22px\" height=\"44px\" viewBox=\"0 0 22 44\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;\"> <g> <path d=\"M0,0l0,40.5c0,0.28 0.22,0.42 0.48,0.32l10.04,-3.64c0.28,-0.1 0.7,-0.1 0.96,0l10.04,3.64c0.28,0.1 0.48,-0.04 0.48,-0.32l0,-40.5l-22,0ZM14.46,24.08l1.68,5.26c0.08,0.18 0,0.38 -0.16,0.5c-0.14,0.1 -0.36,0.1 -0.52,0l-4.46,-3.24l-4.46,3.24c-0.08,0.06 -0.18,0.1 -0.28,0.1c-0.08,0 -0.18,-0.04 -0.24,-0.1c-0.16,-0.12 -0.24,-0.32 -0.16,-0.5l1.68,-5.26l-4.46,-3.24c-0.14,-0.12 -0.22,-0.32 -0.16,-0.52c0.08,-0.18 0.24,-0.32 0.44,-0.32l5.52,0l1.68,-5.24c0.14,-0.36 0.74,-0.36 0.88,0l1.7,5.24l5.5,0c0.2,0 0.36,0.14 0.44,0.32c0.06,0.2 -0.02,0.4 -0.16,0.52l-4.46,3.24Z\"></path> </g> </svg>'\n            : '<svg width=\"18px\" height=\"18px\" viewBox=\"0 0 18 18\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\"> <g> <path d=\"M3.74,18 C3.64,18 3.54,17.96 3.46,17.9 C3.28,17.76 3.2,17.54 3.28,17.34 L5.16,11.5 L0.2,7.9 C0.04,7.78 -0.04,7.56 0.02,7.34 C0.1,7.14 0.28,7 0.5,7 L6.64,7 L8.52,1.16 C8.66,0.76 9.34,0.76 9.48,1.16 L11.38,7 L17.5,7 C17.72,7 17.9,7.14 17.98,7.34 C18.04,7.56 17.96,7.78 17.8,7.9 L12.84,11.5 L14.72,17.34 C14.8,17.54 14.72,17.76 14.54,17.9 C14.38,18.02 14.14,18.02 13.96,17.9 L9,14.3 L4.04,17.9 C3.96,17.96 3.84,18 3.74,18 L3.74,18 Z M9,13.18 C9.1,13.18 9.2,13.2 9.3,13.28 L13.3,16.18 L11.78,11.46 C11.7,11.26 11.78,11.04 11.96,10.92 L15.96,8 L11,8 C10.8,8 10.6,7.86 10.54,7.66 L9,2.94 L7.46,7.66 C7.4,7.86 7.22,8 7,8 L2.04,8 L6.04,10.92 C6.22,11.04 6.3,11.26 6.22,11.46 L4.7,16.18 L8.7,13.28 C8.8,13.2 8.9,13.18 9,13.18 L9,13.18 Z\"></path> </g> </svg>'\n        }}\n      />\n    );\n  }\n}\n\nTodoStarIcon.propTypes = {\n  todo: PropTypes.object.isRequired,\n  counterActiveStarred: PropTypes.number.isRequired,\n  toggleItemStarState: PropTypes.func.isRequired,\n  updateTodo: PropTypes.func.isRequired\n};\n\nexport default TodoStarIcon;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID\n};\n\nconst firebaseApp = firebase.initializeApp(config);\nconst firebaseDb = firebaseApp.database();\nconst base = Rebase.createClass(firebaseDb);\nconst rootUrl = \"meiri\";\n\nexport { firebaseApp, firebaseDb, base, rootUrl };\n","import * as types from \"./types\";\nimport { base, rootUrl, firebaseDb } from \"../../storage/base\";\n\nexport const _addSucceed = (todo) => ({\n  type: types.CREATE_TODO_SUCCEED,\n  todo\n});\n\nexport const _updateSucceed = (newTodo, oldTodo) => ({\n  type: types.UPDATE_TODO_SUCCEED,\n  newTodo,\n  oldTodo\n});\n\nexport const _remove = (key) => ({\n  type: types.DELETE_TODO,\n  key\n});\n\nexport const removeCompleted = () => ({\n  type: types.REMOVE_COMPLETED_TODOS\n});\n\nexport const updateVisibility = (visibility) => ({\n  type: types.UPDATE_VISIBILITY,\n  visibility\n});\n\nexport const _fetchTodosSucceed = (todos) => ({\n  type: types.FETCH_TODOS_SUCCEED,\n  todos: todos\n});\n\nexport const loadTodos = () => {\n  return function(dispatch) {\n    return base\n      .fetch(`${rootUrl}/todos`, {\n        context: this,\n        asArray: true\n      })\n      .then((todos) => {\n        dispatch(_fetchTodosSucceed(todos));\n      })\n      .catch((error) => {\n        throw error;\n      });\n  };\n};\n\nexport const update = (newTodo, oldTodo) => {\n  return function(dispatch) {\n    return base\n      .post(`${rootUrl}/todos/${newTodo.key}`, {\n        data: newTodo\n      })\n      .then(() => {\n        dispatch(_updateSucceed(newTodo, oldTodo));\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n};\n\nexport const remove = (key) => {\n  return function(dispatch) {\n    const nodeUrl = `${rootUrl}/todos/${key}`;\n    firebaseDb.ref(nodeUrl).remove();\n    dispatch(_remove(key));\n  };\n};\n\nexport const add = (todo) => {\n  return function(dispatch) {\n    return base\n      .push(`${rootUrl}/todos`, {\n        data: todo\n      })\n      .then((newLocation) => {\n        dispatch(_addSucceed(todo));\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n};\n","export const FETCH_TODOS = \"FETCH_TODOS\";\nexport const FETCH_TODOS_SUCCEED = \"FETCH_TODOS_SUCCEED\";\nexport const CREATE_TODO_SUCCEED = \"CREATE_TODO_SUCCEED\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\nexport const UPDATE_TODO_SUCCEED = \"UPDATE_TODO_SUCCEED\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const REMOVE_COMPLETED_TODOS = \"REMOVE_COMPLETED_TODOS\";\nexport const UPDATE_VISIBILITY = \"UPDATE_VISIBILITY\";\n","export const VISIBILITY_ALL = \"all\";\nexport const VISIBILITY_ACTIVE = \"active\";\nexport const VISIBILITY_COMPLETED = \"completed\";\n","import {createSelector} from 'reselect';\nimport * as Filters from '../../constants/Filter';\n\nconst getTodos = state => state.todoApp.todos;\n\nexport const countActive = createSelector(getTodos, todos => {\n  return todos.filter(todo => !todo.completed).length;\n});\n\nexport const countActiveStarred = createSelector(getTodos, todos => {\n  return todos.filter(todo => !todo.completed && todo.starred).length;\n});\n\nexport const countByFilterValue = createSelector(\n  getTodos,\n  (todos) => {\n    let filterCounter = {};\n    const filterValues = Object.values(Filters);\n    filterValues.map(value => {\n      if (value === Filters.VISIBILITY_ALL) {\n        return filterCounter[value] = todos.length;\n      } else if (value === Filters.VISIBILITY_COMPLETED) {\n        return filterCounter[value] = todos.filter(todo => todo.completed).length;\n      } else if (value === Filters.VISIBILITY_ACTIVE) {\n        return filterCounter[value] = todos.filter(todo => !todo.completed).length;\n      } else {\n        throw new Error('Unknown filter: ' + value);\n      }\n    });\n\n    return filterCounter;\n  },\n);\n","import {connect} from 'react-redux';\nimport TodoStarIcon from '../../components/TodoStarIcon';\nimport {update} from '../actions/todoActions';\nimport * as CounterSelector from '../selectors/counterSelector';\n\nconst mapStateToProps = state => ({\n  counterActiveStarred: CounterSelector.countActiveStarred(state),\n});\n\nexport default connect(mapStateToProps, {updateTodo: update})(TodoStarIcon);\n","import React, { Component } from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport TodoTextInput from \"./TodoTextInput\";\nimport TodoStarIcon from \"../redux/containers/TodoStarIcon\";\n\nclass TodoItem extends Component {\n  state = {\n    completed: this.props.todo.completed,\n    starred: this.props.todo.starred,\n    editing: false\n  };\n\n  handleCheckboxChange = (event) => {\n    const isCompleted = event.target.checked;\n    this.setState({\n      completed: isCompleted\n    });\n\n    const newTodo = { ...this.props.todo, completed: isCompleted };\n\n    this.props.updateTodo(newTodo, this.props.todo);\n  };\n\n  handleDoubleClick = () => {\n    this.setState({\n      editing: true\n    });\n  };\n\n  handleToggleItemStarState = (starred) => {\n    this.setState({\n      starred: starred\n    });\n  };\n\n  handleInputFieldUpdate = (text) => {\n    if (text.length === 0) {\n      this.props.deleteTodo(this.props.todo.key);\n    } else if (text !== this.props.todo.title) {\n      const newTodo = { ...this.props.todo, title: text };\n      this.props.updateTodo(newTodo, this.props.todo);\n    }\n\n    this.setState({ editing: false });\n  };\n\n  render() {\n    let itemView;\n    if (this.state.editing) {\n      itemView = (\n        <TodoTextInput\n          editing={this.state.editing}\n          text={this.props.todo.title}\n          handleInputFieldUpdate={this.handleInputFieldUpdate}\n        />\n      );\n    } else {\n      itemView = (\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            onChange={this.handleCheckboxChange}\n            defaultChecked={this.state.completed}\n          />\n          <label onDoubleClick={this.handleDoubleClick}>\n            {this.props.todo.title}\n          </label>\n          <TodoStarIcon\n            todo={this.props.todo}\n            toggleItemStarState={this.handleToggleItemStarState}\n          />\n        </div>\n      );\n    }\n    return (\n      <li\n        className={classnames(\n          \"todo\",\n          { starred_todo: this.state.starred },\n          { completed: this.state.completed },\n          { editing: this.state.editing }\n        )}\n      >\n        {itemView}\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  updateTodo: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired\n};\n\nexport default TodoItem;\n","import {connect} from 'react-redux';\nimport TodoItem from '../../components/TodoItem';\nimport {remove, update} from '../actions/todoActions';\n\nexport default connect(null, {updateTodo: update, deleteTodo: remove})(TodoItem);\n","import React from \"react\";\nimport TodoItem from \"../redux/containers/TodoItem\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"./Spinner\";\n\nclass TodoList extends React.Component {\n  componentDidMount() {\n    const { loadTodos } = this.props;\n    loadTodos();\n  }\n\n  render() {\n    const { todos } = this.props;\n    return (\n      <ul className=\"todo-list\">\n        {todos.map((todo) => (\n          <TodoItem key={todo.id} todo={todo} />\n        ))}\n      </ul>\n    );\n  }\n}\nTodoList.propTypes = {\n  todos: PropTypes.array.isRequired,\n  loadTodos: PropTypes.func.isRequired\n};\n\nexport default TodoList;\n","import { createSelector } from \"reselect\";\nimport { firstBy } from \"thenby\";\nimport * as Filters from \"../../constants/Filter\";\n\nconst getTodos = (state) => state.todoApp.todos;\nconst getVisibility = (state) => state.todoApp.visibility;\n\nexport const getFilteredTodos = createSelector(\n  [getTodos, getVisibility],\n  (todos, visibility) => {\n    const starredFirst = (a, b) => b.starred - a.starred;\n    switch (visibility) {\n      case Filters.VISIBILITY_ACTIVE:\n        return todos.filter((t) => !t.completed).sort(firstBy(starredFirst));\n      case Filters.VISIBILITY_COMPLETED:\n        return todos.filter((t) => t.completed).sort(firstBy(starredFirst));\n      case Filters.VISIBILITY_ALL:\n        return todos.sort(firstBy(\"completed\").thenBy(starredFirst));\n      default:\n        return todos;\n    }\n  }\n);\n","import { connect } from \"react-redux\";\nimport TodoList from \"../../components/TodoList\";\nimport * as ListSelector from \"../selectors/listSelector\";\nimport { loadTodos } from \"../actions/todoActions\";\n\nconst mapStateToProps = (state) => ({\n  todos: ListSelector.getFilteredTodos(state),\n  loading: state.loading\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadTodos: loadTodos }\n)(TodoList);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass TodoForm extends Component {\n  state = { inputText: \"\" };\n\n  handleChange = (e) => {\n    this.setState({ inputText: e.target.value });\n  };\n\n  handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      const text = this.state.inputText.trim();\n      if (!text) {\n        return;\n      }\n\n      const newTodo = {\n        id: Date.now(),\n        title: this.state.inputText,\n        starred: 0,\n        completed: false\n      };\n\n      this.props.createTodo(newTodo);\n      this.setState({ inputText: \"\" });\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className=\"new-todo\"\n        type=\"text\"\n        placeholder=\"What needs to be done?\"\n        value={this.state.inputText}\n        onChange={this.handleChange}\n        onKeyPress={this.handleKeyPress}\n        autoFocus={true}\n      />\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  createTodo: PropTypes.func.isRequired\n};\n\nexport default TodoForm;\n","import {connect} from 'react-redux';\nimport TodoForm from '../../components/TodoForm';\nimport {add} from '../actions/todoActions';\n\nexport default connect(null, {createTodo: add})(TodoForm);\n","import React from \"react\";\nimport GitHub from \"./components/Github\";\nimport TodoList from \"./redux/containers/TodoList\";\nimport TodoForm from \"./redux/containers/TodoForm\";\nimport \"./view/css/index.css\";\nimport \"./view/css/App.css\";\n\nconst App = () => {\n  return (\n    <div>\n      <GitHub />\n      <section className=\"todoapp\">\n        <h1>{\"每日坚持\"}</h1>\n\n        <header className=\"header\">\n          <TodoForm />\n        </header>\n\n        <section className=\"main\">\n          <TodoList />\n        </section>\n      </section>\n      <span>{\"CSS template powered by todomvc.com®\"}</span>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const dateToString = () => {\n  const currentDate = new Date().toISOString();\n\n  const year = currentDate.substr(0, 4);\n  const month = currentDate.substr(5, 2);\n  const day = currentDate.substr(8, 2);\n\n  return `${year}-${month}-${day}`;\n};\n","import * as types from \"../actions/types\";\nimport { dateToString } from \"../../utils/date\";\n\nconst initialState = {\n  todos: [],\n  logs: [],\n  todosChanged: false,\n  visibility: \"all\"\n};\n\nconst removeCompletedTodos = (state) => {\n  return state.todos.filter((todo) => todo.completed === false);\n};\n\nconst updateTodo = (state, action) => {\n  const todos = [...state.todos];\n  todos[todos.indexOf(action.oldTodo)] = action.newTodo;\n\n  return todos;\n};\n\nconst updateLogs = (state, action) => {\n  const currentDate = dateToString();\n  const logs = { ...state.logs };\n  const trackedTodos = logs[currentDate] || [];\n  const index = trackedTodos.indexOf(action.newTodo.id);\n\n  if (action.newTodo.completed && index === -1) {\n    logs[currentDate] = [...trackedTodos, action.newTodo.id];\n\n    return logs;\n  }\n\n  if (!action.newTodo.completed && index > -1) {\n    trackedTodos.splice(index, 1);\n  }\n\n  return logs;\n};\n\nconst deleteTodo = (state, action) => {\n  return state.todos.filter((todo) => todo.key !== action.key);\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case types.FETCH_TODOS_SUCCEED:\n      return { ...state, todos: action.todos, loading: false };\n    case types.CREATE_TODO_SUCCEED:\n      return {\n        ...state,\n        todos: [action.todo, ...state.todos],\n        todosChanged: true\n      };\n    case types.UPDATE_TODO_SUCCEED:\n      return {\n        ...state,\n        todos: updateTodo(state, action),\n        logs: updateLogs(state, action),\n        todosChanged: true\n      };\n    case types.DELETE_TODO:\n      return { ...state, todos: deleteTodo(state, action), todosChanged: true };\n    case types.REMOVE_COMPLETED_TODOS:\n      return {\n        ...state,\n        todos: removeCompletedTodos(state),\n        todosChanged: true,\n        visibility: \"all\"\n      };\n    case types.UPDATE_VISIBILITY:\n      return { ...state, visibility: action.visibility, todosChanged: false };\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux'\nimport todoReducer from './todoReducer'\n\nconst index = combineReducers({\n  todoApp: todoReducer,\n  // another reducer\n});\n\nexport default index;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/store/configureStore\";\nimport * as keys from \"./storage/storageKey\";\n\nwindow.todoStorage = {\n  uid: 0,\n  fetchTodos: function() {\n    try {\n      const serializedState = localStorage.getItem(keys.KEY_MEIRI_TODOS);\n      if (serializedState === null) {\n        return undefined;\n      }\n\n      return JSON.parse(serializedState);\n    } catch (err) {\n      return undefined;\n    }\n  },\n  saveTodos: function(todos) {\n    try {\n      const serializedTodos = JSON.stringify(todos);\n      localStorage.setItem(keys.KEY_MEIRI_TODOS, serializedTodos);\n    } catch (err) {\n      // ignore write errors\n    }\n  },\n  fetchTodoLogs: function() {\n    try {\n      const logs = localStorage.getItem(keys.KEY_MEIRI_LOGS);\n      if (logs === null) {\n        return {};\n      }\n\n      return JSON.parse(logs);\n    } catch (err) {\n      return undefined;\n    }\n  },\n  saveTodoLogs: function(logs) {\n    try {\n      localStorage.setItem(keys.KEY_MEIRI_LOGS, JSON.stringify(logs));\n    } catch (err) {\n      // ignore write erros\n    }\n  },\n  saveCurrentDate: function(dateString) {\n    try {\n      localStorage.setItem(keys.KEY_MEIRI_CURRENT_DATE, dateString);\n    } catch (err) {\n      // ignore write errors\n    }\n  },\n  fetchCurrentDate: function() {\n    try {\n      return localStorage.getItem(keys.KEY_MEIRI_CURRENT_DATE);\n    } catch (err) {\n      return undefined;\n    }\n  }\n};\n\nconst store = configureStore();\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","export const KEY_MEIRI_TODOS = \"MEIRI_TODOS\";\nexport const KEY_MEIRI_CURRENT_DATE = \"MEIRI_CURRENT_DATE\";\nexport const KEY_MEIRI_LOGS = \"MEIRI_LOGS\";\n","import { createStore } from \"redux\";\nimport configureEnhancer from \"./configureEnhancer\";\nimport rootReducer from \"../reducers/index\";\nimport * as Filters from \"../../constants/Filter\";\nimport { dateToString } from \"../../utils/date\";\n\nexport default function configureStore() {\n  const enhancer = configureEnhancer();\n  const currentDate = dateToString();\n  const storedDate = window.todoStorage.fetchCurrentDate();\n  const initLoad = !(storedDate === currentDate);\n\n  const initialState = {\n    todoApp: {\n      todos: [],\n      todosChanged: false,\n      visibility: Filters.VISIBILITY_ALL\n    }\n  };\n\n  const store = createStore(rootReducer, initialState, enhancer);\n\n  return store;\n}\n","import {applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\n\nexport default function configureEnhancer() {\n  const REDUX_EXTENSION = window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : undefined;\n\n  if (REDUX_EXTENSION) {\n    return compose(applyMiddleware(thunk), REDUX_EXTENSION);\n  }\n\n  return applyMiddleware(thunk);\n}\n"],"sourceRoot":""}